{:target :spartan6
 :pins {:file "../pins/microboard.pins"
        :type :pin-names
        :rules
        [
         ;; Default to LVCMOS33 for all pins and then override for
         ;; certain pins later
         {:match ".*" :attrs {:iostandard "LVCMOS33"}}

         ;; User Reset Push Button
         ;;   Ignore the timing for this signal
         ;;   Internal pull-down required since external resistor is not populated
         {:match "user_reset" :signal true :attrs {:pulldown true}}

         ;;{:match "spi_.*" :signal true}
         ;; never select on board flash
         {:match "spi_cs" :out 1}
         {:match "user_clock" :signal true}
         {:match "clock_y3" :signal true :buff false}
         {:match ["led" n] :signal ["po(" n ")"] :attrs {:iostandard "LVCMOS18"}}

         {:match "rxd" :signal "uart_rx"}
         {:match "txd" :signal "uart_tx"}

         {:match "scl" :signal true}
         {:match "sda" :signal true}

         ;; ddr pins
         {:match "lpddr_.*" :attrs {:iostandard "MOBILE_DDR"}}
         ;; addresses
         {:match ["lpddr_a" n] :signal ["ddr_sd_ctrl.a(" n ")"]}
         {:match ["lpddr_ba" n] :signal ["ddr_sd_ctrl.ba(" n ")"]}
         ;; clock
         {:match "lpddr_ck_[np]" :attrs {:iostandard "DIFF_MOBILE_DDR"}}
         {:match "lpddr_ck_n" :signal {:name "ddr_clk" :diff :neg}}
         {:match "lpddr_ck_p" :signal {:name "ddr_clk" :diff :pos}}
         {:match "lpddr_cke" :signal "ddr_sd_ctrl.cke"}
         ;; control
         {:match "lpddr_cas" :signal "ddr_sd_ctrl.cas"}
         {:match "lpddr_ras" :signal "ddr_sd_ctrl.ras"}
         {:match "lpddr_we" :signal "ddr_sd_ctrl.we"}
         ;; data
         {:match ["lpddr_dq" n]
          :in ["dr_data_i.dqi(" n ")"]
          :out ["dr_data_o.dqo(" n ")"]
          :out-en ["dr_data_o.dq_outen(" n ")"]}
         {:match "lpddr_ldm"
          :out "dr_data_o.dmo(0)"
          :out-en "dr_data_o.dq_outen(16)"}
         {:match "lpddr_udm"
          :out "dr_data_o.dmo(1)"
          :out-en "dr_data_o.dq_outen(17)"}
         {:match "lpddr_ldqs"
          :in "dr_data_i.dqsi(0)"
          :out "dr_data_o.dqso(0)"
          :out-en "dr_data_o.dqs_outen(0)"}
         {:match "lpddr_udqs"
          :in "dr_data_i.dqsi(1)"
          :out "dr_data_o.dqso(1)"
          :out-en "dr_data_o.dqs_outen(1)"}

         {:match ["pmod" n "_p" m] :signal ["pmod" n "(" m ")"]
          :attrs {:iostandard "LVCMOS25"}}

         {:match "pmod1_p2" :signal "spi_mosi"}
         {:match "pmod1_p10" :signal "spi_miso" :attrs {:pullup true}}
         {:match "pmod1_p9" :signal "spi_clk"}
         {:match "pmod1_p8" :signal "spi_cs(0)"}
         ]
        }

 ;; Some signals have different names in different blocks. This
 ;; setting tells the tool which signals are actually the same signal.
 ;; When entities are parsed, each signal in the list of signals on
 ;; the right is renamed to the signal on the left
 :merge-signals
 {"pll_rst" ["ddr_clkgen_reset_i" "pll_250_reset_o"]
  "clock_locked" ["ddr_clkgen_locked" "clk_ddr"]
  "clk_sys" ["clk_sys" "ddr_clkgen_clk0_o" "clk_50_0"]
  "clk_sys_90" ["ddr_clkgen_clk90_o" "clk_50_90"]
  "clk_sys2x" ["ddr_clkgen_clk2x_o"]
  "clock_y3" ["clock_input"]
  "clk31_todcm" ["pll_250_clk31" "ddr_clkgen_clk_i"]}

 ;; Supply a zero value for a list of global signals that aren't
 ;; output by devices in the design
 :zero-signals
 ["icache0_ctrl"
  "icache1_ctrl"
  "cache01sel_ctrl_temp"
  "dcache_ctrl"
  "dma_dbus_o"
  "debug_i"]

 :system
 {:pio
  {[0 3] {:name "led"}
   [5 31] 0}}

 ;; list entities, other than top, that should be instantiated at the
 ;; padring level
 :padring-entities {"pll_250" {}
                    "ddr_clkgen" {} ;; why no work? {:ports {"ddr_clk0" {:signal "clk_sys"}}}
                    "ddr_iocells" {}
                    "reset_gen" {}}

 ;; list entities, other that the devices entity, that should be
 ;; instantiated at the top level
 :top-entities {"cpus" {:architecture "one_cpu"}
                "ddr_ram_mux" {:architecture "one_cpu_direct"}
                "ddr_ctrl" {:generics {"c_data_width" CFG_DDRDQ_WIDTH
                                       "c_sa_width" CFG_SA_WIDTH
                                       "c_dll_enable" 2
                                       "c_period_clkbus" CFG_BUS_PERIOD}}}

 :device-classes
 {$include "../common_device_classes.edn"}
 :devices
 [{:class "gpio"
   :base-addr 0xabcd0000
   :irq 4}
  {:class "spi"
   :base-addr 0xabcd0040
   :generics {"c_csnum" 2
              "fclk" 31.25e6}}
  {:class "uartlite"
   :name "uart"
   :base-addr 0xabcd0100
   :irq 1
   :generics {"intcfg" 1
              "fclk" 31.25e6
              "bps" 115.2e3}}]}
